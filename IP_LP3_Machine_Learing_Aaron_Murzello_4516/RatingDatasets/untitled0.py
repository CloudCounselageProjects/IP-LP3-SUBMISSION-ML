# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nOItuvQZn5VkkwuDmu8DG_yxqGHoraXS
"""

import numpy as np
import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer

from google.colab import files
uploaded=files.upload()

df=pd.read_csv('Ratings.csv',index_col=0)
df=df.fillna(0)
df.head()

df.shape

def standardize(row):
    new_row=(row-row.mean())/(row.max()-row.min())
    return new_row
df_std=df.apply(standardize)  
item_similarity =cosine_similarity(df_std.T)
print(item_similarity)

item_similarity_ratings=pd.DataFrame(item_similarity,index=df.columns,columns=df.columns)
item_similarity_ratings

def get_similar_movies(movie_name,user_rating):
    similar_score=item_similarity_ratings[movie_name]*(user_rating-2.5)
    similar_score=similar_score.sort_values(ascending=False)
    return similar_score
print(get_similar_movies("Movie1",5))

movie_lover=[("Movie1",5),("Movie2",5),("Movie3",0)]
similar_movies=pd.DataFrame()
for movie,rating in movie_lover:
    similar_movies=similar_movies.append(get_similar_movies(movie,rating),ignore_index=True)
similar_movies.head() 
similar_movies.sum().sort_values(ascending=False)





